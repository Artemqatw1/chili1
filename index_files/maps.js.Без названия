"use strict";

function GeoMap(element, index) {
    this.element = element;
    this.isSidebar = this.element.hasClass('sidebar');
    this.back = this.element.find('.jsa_map_back');
    this.all = this.element.find('.jsa_map_all');
    this.input = this.element.find('.map__country');
    this.form = this.element.find('.map__form');
    this.index = index;

    this.back.on('click', function(e) {
        console.log('click back');
        e.preventDefault();

        this.selectedRegion.elements.forEach(function(el) {
            el.css('fill', this.selectedRegion.color); // kolor szary z tablicy
        }.bind(this));

        this.group.attr('transform', this.originalTransform);
        this.selectedRegion = null;

        $(e.currentTarget).hide();
    }.bind(this));

    if ($(window).width() < 1199) {
        this.element.attr('height', '500px');
    }

    this.prefix = '#jqvmap' + this.index + '_';

    this.regions = {
        europe: {
            countries: ["pt","sm","gl","lu","me","cy","gb","de","ge","mc","fr","ko","nl","es","by","fo","hu","ro","is","mk",
                        "im","sk","ie","je","bg","ch","hr","cz","pl","tr","ee","ax","ua","lv","fi","mt","li","sj","va","ba",
                        "be","lt","gr","rs","si","at","se","ad","no","gg","al","it","md","dk","gi"],
            text: 'Europe',
            transform: {
                scale: 1.8,
                x: -25,
                y: 3
            },
            color: '#bbb',
            name: 'europe'
        },
        russia_and_central_asia: {
            countries: ["uz","am","kz","tm","az","af","kg","ru","tj"],
            text: 'Russia And Central Asia',
            transform: {
                scale: 1.3,
                x: -40,
                y: 10
            },
            color: '#aaa',
            name: 'russia_and_central_asia'
        },
        north_america: {
            countries: ["mx","ca","us"],
            text: 'North America',
            transform: {
                scale: 1.4,
                x: 0,
                y: 0
            },
            color: '#929292',
            name: 'north_america'
        },
        south_and_central_america: {
            countries: ["cr","br","co","gf","bo","ar","ni","sv","bb","pe","do","pr","uy",
                        "sr","ec","pa","gt","bs","py","ve","fk","hn","cu","cl","ht","jm"],
            text: 'South And Central America',
            transform: {
                scale: 1.5,
                x: 0,
                y: -33
            },
            color: '#999',
            name: 'south_and_central_america'
        },
        subsaharan_africa: {
            countries: ["km","ke","rw","mg","ng","sl","bw","ml","td","zw","mr","za","zm","cd","ao","bj","mw","er","ug","sd",
                        "gh","ls","lr","dj","bf","sz","gm","bi","sn","gq","so","cm","gw","cf","ci","na","mu","cg","tz","ss",
                        "mz","yt","et","ga","ne","tg","gn"],
            text: 'Subsaharan Africa',
            transform: {
                scale: 1.6,
                x: -35,
                y: -25
            },
            color: '#888',
            name: 'subsaharan_africa'
        },
        middle_east_and_north_africa: {
            countries: ["eg","dz","tn","ae","lb","iq","sy","qa","ye","ly","om","ma","eh","il","ps","jo","kw","ir","sa"],
            text: 'Middle East And North Africa',
            transform: {
                scale: 1.9,
                x: -30,
                y: -20
            },
            color: '#777',
            name: 'middle_east_and_north_africa'
        },
        south_asia: {
            countries: ["in","bd","pk"],
            text: 'South Asia',
            transform: {
                scale: 2.2,
                x: -55,
                y: -20
            },
            color: '#666',
            name: 'south_asia'
        },
        southeast_asia_and_australia: {
            countries: ["la","sb","th","sg","pg","fj","tv","bt","vn","my","ph","kh","bn","id","au","tl","nc","pw","nz","mm"],
            text: 'Southeast Asia And Australia',
            transform: {
                scale: 1.5,
                x: -55,
                y: -30
            },
            color: '#555',
            name: 'southeast_asia_and_australia'

        },
        east_asia: {
            countries: ["cn","jp","mn","hk","tw","mo","kr","kp"],
            text: 'East Asia',
            transform: {
                scale: 1.8,
                x: -55,
                y: -15
            },
            color: '#444',
            name: 'east_asia'
        }
    };
    this.sideBarScale = {
        europe: {
            transform: {
                scale: 0.9,
                x: -37,
                y: -8
            }
        },
        russia_and_central_asia: {
            transform: {
                scale: 0.7,
                x: -50,
                y: 0
            }
        },
        north_america: {
            transform: {
                scale: 0.6,
                x: 0,
                y: -2
            }
        },
        south_and_central_america: {
            transform: {
                scale: 0.6,
                x: -5,
                y: -47
            }
        },
        subsaharan_africa: {
            transform: {
                scale: 2,
                x: -40,
                y: -42
            }
        },
        middle_east_and_north_africa: {
            transform: {
                scale: 0.9,
                x: -40,
                y: -45
            }
        },
        south_asia: {
            transform: {
                scale: 0.9,
                x: -42,
                y: -25
            }
        },
        southeast_asia_and_australia: {
            transform: {
                scale: 1.2,
                x: -67,
                y: -23
            }
        },
        east_asia: {
            transform: {
                scale: 1,
                x: -65,
                y: -36
            }
        }
    };

    this.init();

    for (var key in this.regions) {
        var region = this.regions[key];
        if (this.isSidebar) {
            region.transform = $.extend(region.transform, this.sideBarScale[key].transform);
        }
        region.elements = region.countries.map(function(element) {
            var a = $(this.prefix + element);
            var el = $(this.prefix + element);
            el.css('fill', region.color);
            return el;
        }.bind(this));
    }

}

GeoMap.prototype.init = function() {

    JQVMap.prototype.makeDraggable = function () {}; // brutal hack

    this.element.vectorMap({
        map: 'world_en',
        enableZoom: false,
        backgroundColor: '#FFF',
        onRegionOver: function(element, code, region) {
            if (this.selectedRegion) { // jakiś region jest wybrany i kraj jets z tego regionu - rozświetl kraj
                var index = this.selectedRegion.countries.indexOf(code);
                if (index >= 0) {
                    this.selectedRegion.elements[index].css('fill', '#1c5e82');
                } else {
                    element.preventDefault();
                }
            } else { // żaden regioon nie jest wybrany - rozświetl region
                for (var key in this.regions) {
                    var region = this.regions[key];
                    if (region.countries.indexOf(code) >= 0) {
                        this.hoveredRegion = region;
                        region.elements.forEach(function(element) {
                            element.css('fill', '#1c5e82');
                        }.bind(this))
                    }
                }
            }
        }.bind(this),
        onRegionOut: function(element, code, region) {
            console.log('region out');
            if (this.selectedRegion) {
                this.hoveredRegion.elements.forEach(function(element) {
                    element.css('fill', '#257cac');
                }.bind(this))
            } else if (this.hoveredRegion) {
                this.hoveredRegion.elements.forEach(function(element) {
                    element.css('fill', this.hoveredRegion.color);
                }.bind(this));

            }
        }.bind(this),
        onRegionSelect: function(event, code, region) {
            console.log('region select');

        },
        onRegionDeselect: function(event, code, region) {
            console.log('region deselect');

        },
        onRegionClick: function(element, code, region) {
            console.log('region click');
            if (!this.selectedRegion) {
                this.selectedRegion = this.hoveredRegion;
                this.selectedRegion.elements.forEach(function(el) {
                    el.css('fill', '#257cac');
                }.bind(this));
                this.group.css('transform-origin', '0 0');
                var ratioY = this.selectedRegion.transform.y * 0.01 / this.scale;
                var ratioX = this.selectedRegion.transform.x * 0.01 / this.scale;
                this.group.attr('transform', 'scale(' + this.selectedRegion.transform.scale + ') translate(' + (this.svgwWidth * ratioX) + ', ' + (this.svgHeight * ratioY) + ')');
                this.back.show();
                this.all.show();
            } else if (this.selectedRegion.countries.indexOf(code) >= 0) {
                  window.location = '/redirect/countries/'+code;
            } else {
                element.preventDefault();
            }
        }.bind(this),
        onLabelShow: function(event, label, code) {
            if (!this.selectedRegion) {
                label.text(this.hoveredRegion.text);
            } else if (this.selectedRegion.countries.indexOf(code) < 0) {
                event.preventDefault()
            }
        }.bind(this),
    });

    this.group = this.element.find('svg > g');
    this.svg = this.element.find('svg');
    this.svgwWidth = this.svg.width();
    this.svgHeight = this.svg.height();
    var transform = this.group.attr('transform');
    this.transform = this.scale = parseFloat(transform.substr(transform.indexOf('scale(') + 6, transform.indexOf(')') - transform.indexOf('scale(') - 6));
    this.originalTransform = transform;

    console.log(transform, this.originalTransform)
};


